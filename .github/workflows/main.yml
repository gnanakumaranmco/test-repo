name: Deploy CloudFormation Stacks

on:
  pull_request:
    branches:
      - main          # Run only when PR targets main
    types:
      - closed        # Only trigger when PR is closed

jobs:
  deploy:
    if: github.event.pull_request.merged == true   # Run only if PR was merged
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1   # Change if needed

      # Step 3: Install yq + cfn-lint
      - name: Install dependencies
        run: |
          sudo wget -qO /usr/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 && sudo chmod +x /usr/bin/yq
          pip install cfn-lint

      # Step 4: Loop through each service folder and deploy
      - name: Deploy all CloudFormation stacks
        run: |
          for SERVICE_DIR in */; do
            # Find first YAML file inside parameters/ and template/
            PARAM_FILE=$(find "$SERVICE_DIR/parameters" -maxdepth 1 -name "*.yml" | head -n 1)
            TEMPLATE_FILE=$(find "$SERVICE_DIR/template" -maxdepth 1 -name "*.yml" | head -n 1)
            STACK_NAME=$(basename "$SERVICE_DIR")

            if [ -z "$PARAM_FILE" ] || [ -z "$TEMPLATE_FILE" ]; then
              echo "⚠️ Skipping $SERVICE_DIR (missing parameters/*.yml or template/*.yml)"
              continue
            fi

            echo "======================================"
            echo "Deploying stack: $STACK_NAME"
            echo "Parameters: $PARAM_FILE"
            echo "Template:   $TEMPLATE_FILE"
            echo "======================================"

            # Run linter
            cfn-lint "$TEMPLATE_FILE"

            # Validate with AWS
            aws cloudformation validate-template \
              --template-body file://"$TEMPLATE_FILE"

            # Convert parameters.yml into AWS CLI format
            PARAMS=$(yq eval '. as $map ireduce (""; . + " " + .key + "=" + (.value|tostring))' "$PARAM_FILE")

            # Deploy stack
            aws cloudformation deploy \
              --template-file "$TEMPLATE_FILE" \
              --stack-name "$STACK_NAME" \
              --parameter-overrides $PARAMS \
              --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND
          done
