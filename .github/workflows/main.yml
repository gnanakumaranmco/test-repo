name: Deploy CloudFormation Stacks

on:
  pull_request:
    branches:
      - main
    types:
      - closed   # Only run when PR is closed

jobs:
  deploy:
    if: github.event.pull_request.merged == true   # Run only if PR was merged
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1   # Change if needed

      # Step 3: Install tools (yq + cfn-lint)
      - name: Install dependencies
        run: |
          sudo wget -qO /usr/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 && sudo chmod +x /usr/bin/yq
          pip install cfn-lint

      # Step 4: Deploy all CloudFormation stacks from stack_master.yml
      - name: Deploy all CloudFormation stacks
        run: |
          # The aws-region is set at the job level.
          REGION="${{ env.AWS_REGION }}"

          # Parse stack_master.yml to get defaults and stacks
          DEFAULT_TAGS=$(yq e '.stack_defaults.tags' stack_master.yml)

          # Use yq to iterate through each stack definition in the specified region
          yq e ".stacks[\"$REGION\"] | keys | .[]" stack_master.yml | while read STACK_NAME; do
            STACK_DEFN=$(yq e ".stacks[\"$REGION\"][\"$STACK_NAME\"]" stack_master.yml)
            TEMPLATE_FILE=$(echo "$STACK_DEFN" | yq e '.template' -)
            PARAM_FILE=$(echo "$STACK_DEFN" | yq e '.parameters' -)
            
            # Combine default tags with stack-specific tags
            STACK_TAGS=$(echo "$STACK_DEFN" | yq e '.tags' -)
            
            # Run linter on the template file
            echo "======================================"
            echo "Deploying stack: $STACK_NAME"
            echo "Template: $TEMPLATE_FILE"
            if [ -n "$PARAM_FILE" ]; then
              echo "Parameters: $PARAM_FILE"
            fi
            echo "======================================"

            if [ -f "$TEMPLATE_FILE" ]; then
                cfn-lint "$TEMPLATE_FILE"
            else
                echo "‚ùå Template file $TEMPLATE_FILE not found. Skipping."
                continue
            fi

            # Validate with AWS
            aws cloudformation validate-template --template-body file://"$TEMPLATE_FILE"

            # Build the parameter overrides string from parameters.yml
            PARAMS=""
            if [ -n "$PARAM_FILE" ] && [ -f "$PARAM_FILE" ]; then
                PARAMS=$(yq eval '. | to_entries | map("ParameterKey=" + .key + ",ParameterValue=" + (.value | tostring)) | .[]' "$PARAM_FILE" | paste -sd ' ' -)
            fi
            
            # Build the tags string from defaults and stack-specific tags
            TAGS=""
            if [ -n "$DEFAULT_TAGS" ]; then
                TAGS=$(echo "$DEFAULT_TAGS" | yq e '. | to_entries | map("Key=" + .key + ",Value=" + .value) | .[]' - | paste -sd ' ' -)
            fi

            # Deploy stack
            aws cloudformation deploy \
              --template-file "$TEMPLATE_FILE" \
              --stack-name "$STACK_NAME" \
              --parameter-overrides $PARAMS \
              --tags $TAGS \
              --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND
          done
