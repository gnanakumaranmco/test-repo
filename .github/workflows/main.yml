name: Deploy CloudFormation Stack

on:
  pull_request:
    branches:
      - main
    types:
      - closed # Only run when a PR is closed

jobs:
  deploy:
    if: github.event.pull_request.merged == true # Run only if the PR was merged
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Configure AWS credentials for the deployment
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      # Step 3: Install necessary tools (yq + cfn-lint)
      - name: Install dependencies
        run: |
          sudo snap install yq
          pip install cfn-lint

      # Step 4: Find the correct template and parameter files using yq
      - name: Deploy CloudFormation Stacks from master file
        run: |
          MASTER_FILE="ECR/stack_master.yml"
          REGION="ap-south-1"

          # Get stack defaults from the master file
          DEFAULT_TAGS=$(yq e '.stack_defaults.tags' "$MASTER_FILE")

          # Loop through each stack defined for the target region
          yq e ".stacks[\"$REGION\"] | keys | .[]" "$MASTER_FILE" | while read STACK_NAME; do
            # Extract file paths and other details for the specific stack
            TEMPLATE_FILE_PATH=$(yq e ".stacks[\"$REGION\"][\"$STACK_NAME\"].template" "$MASTER_FILE")
            PARAM_FILE_PATH=$(yq e ".stacks[\"$REGION\"][\"$STACK_NAME\"].parameters" "$MASTER_FILE")
            
            echo "======================================"
            echo "Deploying stack: $STACK_NAME"
            echo "Template: $TEMPLATE_FILE_PATH"
            echo "Parameters: $PARAM_FILE_PATH"
            echo "======================================"
            
            # Use cfn-lint to validate the CloudFormation template
            cfn-lint "$TEMPLATE_FILE_PATH"

            # Convert parameters.yml to the AWS CLI format
            PARAMS=$(yq e '. as $map ireduce (""; . + " " + .key + "=" + (.value | tostring))' "$PARAM_FILE_PATH")

            # Convert default tags to AWS CLI format
            TAGS=$(echo "$DEFAULT_TAGS" | yq e '. | to_entries | .[] | "--tags Key=" + .key + ",Value=" + .value' - | paste -sd ' ' -)

            # Deploy the stack using the AWS CLI
            aws cloudformation deploy \
              --template-file "$TEMPLATE_FILE_PATH" \
              --stack-name "$STACK_NAME" \
              --parameter-overrides $PARAMS \
              --capabilities CAPABILITY_NAMED_IAM \
              $TAGS
          done
