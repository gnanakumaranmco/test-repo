name: Deploy CloudFormation Stacks

on:
  pull_request:
    branches:
      - main
    types:
      - closed # Only run when PR is closed

jobs:
  deploy:
    if: github.event.pull_request.merged == true # Run only if PR was merged
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Change if needed

      # Step 3: Install tools (yq + cfn-lint)
      - name: Install dependencies
        run: |
          sudo wget -qO /usr/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 && sudo chmod +x /usr/bin/yq
          pip install cfn-lint

      # Step 4: Deploy the CloudFormation stack
      - name: Deploy CloudFormation stack
        run: |
          # Define the paths to your specific parameter and template files
          # The paths are relative to the root of your repository
          PARAM_FILE="./parameters/uai3031404-dev-ds-nonprd-ecr.yml"
          TEMPLATE_FILE="./templates/ecr.yml" # Assuming this is the correct template
          STACK_NAME="uai3031404-dev-ds-nonprd-ecr" # Based on the parameter file name

          # Check if the files exist before proceeding
          if [ ! -f "$PARAM_FILE" ] || [ ! -f "$TEMPLATE_FILE" ]; then
            echo "‚ùå ERROR: One or both of the required files do not exist."
            echo "Checked for:"
            echo "  - $PARAM_FILE"
            echo "  - $TEMPLATE_FILE"
            exit 1 # Exit the workflow with a failure
          fi

          echo "======================================"
          echo "Deploying stack: $STACK_NAME"
          echo "Parameters: $PARAM_FILE"
          echo "Template:   $TEMPLATE_FILE"
          echo "======================================"

          # Run the linter to validate the CloudFormation template
          cfn-lint "$TEMPLATE_FILE"

          # Validate the template with the AWS CloudFormation service
          aws cloudformation validate-template \
            --template-body file://"$TEMPLATE_FILE"

          # The fix: Convert parameters from YAML to the AWS CLI's required format.
          # This yq command creates a space-separated string of ParameterKey=KEY,ParameterValue=VALUE pairs.
          PARAMS=$(yq eval '. | to_entries | .[] | "ParameterKey=\(.key),ParameterValue=\(.value)"' "$PARAM_FILE" | paste -s -d ' ')

          # Deploy or update the stack using the correct parameter format.
          aws cloudformation deploy \
            --template-file "$TEMPLATE_FILE" \
            --stack-name "$STACK_NAME" \
            --parameter-overrides $PARAMS \
            --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND
