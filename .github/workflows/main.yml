name: Deploy CloudFormation Stacks

on:
  pull_request:
    branches:
      - main
    types:
      - closed # Only run when PR is closed

jobs:
  deploy:
    if: github.event.pull_request.merged == true # Run only if PR was merged
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Change if needed

      # Step 3: Install tools (yq + cfn-lint)
      - name: Install dependencies
        run: |
          sudo wget -qO /usr/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 && sudo chmod +x /usr/bin/yq
          pip install cfn-lint

      # Step 4: Loop through service folders and deploy
      - name: Deploy all CloudFormation stacks
        run: |
          # Use find to locate all directories that contain a 'parameters' sub-directory.
          # This is more robust than looping through all top-level directories.
          for SERVICE_DIR in $(find . -type d -name "parameters" -maxdepth 2 | xargs dirname); do
            # The parameter file is expected to be inside the 'parameters' directory.
            PARAM_FILE=$(find "$SERVICE_DIR/parameters" -maxdepth 1 -name "*.yml" | head -n 1)
            # The template file is expected to be inside the 'templates' directory.
            TEMPLATE_FILE=$(find "$SERVICE_DIR/templates" -maxdepth 1 -name "*.yml" | head -n 1)

            if [ -z "$PARAM_FILE" ] || [ -z "$TEMPLATE_FILE" ]; then
              echo "⚠️ Skipping $SERVICE_DIR (missing parameters/*.yml or templates/*.yml)"
              continue
            fi

            # The stack name is derived from the parameter file's name.
            STACK_NAME=$(basename "$PARAM_FILE" .yml)

            echo "======================================"
            echo "Deploying stack: $STACK_NAME"
            echo "Parameters: $PARAM_FILE"
            echo "Template:   $TEMPLATE_FILE"
            echo "======================================"

            # Run the linter to check for template syntax errors and best practices.
            cfn-lint "$TEMPLATE_FILE"

            # Validate the template with the AWS CloudFormation service.
            aws cloudformation validate-template \
              --template-body file://"$TEMPLATE_FILE"

            # The fix: Convert parameters.yml to the AWS CLI's required format.
            # This yq command creates a space-separated string of "ParameterKey=KEY,ParameterValue=VALUE" pairs.
            PARAMS=$(yq eval '. | to_entries | .[] | "ParameterKey=\(.key),ParameterValue=\(.value)"' "$PARAM_FILE" | paste -s -d ' ')

            # Deploy or update the stack using the corrected parameter format.
            aws cloudformation deploy \
              --template-file "$TEMPLATE_FILE" \
              --stack-name "$STACK_NAME" \
              --parameter-overrides $PARAMS \
              --capabilities CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND
          done
